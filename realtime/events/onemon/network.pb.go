// Code generated by protoc-gen-go. DO NOT EDIT.
// source: network.proto

package onemon

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ID: 12
type NetworkFlow struct {
	Ts      uint32 `protobuf:"varint,7,opt,name=ts" json:"ts,omitempty"`
	Pid     uint64 `protobuf:"varint,1,opt,name=pid" json:"pid,omitempty"`
	Proto   uint32 `protobuf:"varint,2,opt,name=proto" json:"proto,omitempty"`
	Srcip   uint32 `protobuf:"fixed32,3,opt,name=srcip" json:"srcip,omitempty"`
	Dstip   uint32 `protobuf:"fixed32,4,opt,name=dstip" json:"dstip,omitempty"`
	Srcport uint32 `protobuf:"varint,5,opt,name=srcport" json:"srcport,omitempty"`
	Dstport uint32 `protobuf:"varint,6,opt,name=dstport" json:"dstport,omitempty"`
}

func (m *NetworkFlow) Reset()                    { *m = NetworkFlow{} }
func (m *NetworkFlow) String() string            { return proto.CompactTextString(m) }
func (*NetworkFlow) ProtoMessage()               {}
func (*NetworkFlow) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *NetworkFlow) GetTs() uint32 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *NetworkFlow) GetPid() uint64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *NetworkFlow) GetProto() uint32 {
	if m != nil {
		return m.Proto
	}
	return 0
}

func (m *NetworkFlow) GetSrcip() uint32 {
	if m != nil {
		return m.Srcip
	}
	return 0
}

func (m *NetworkFlow) GetDstip() uint32 {
	if m != nil {
		return m.Dstip
	}
	return 0
}

func (m *NetworkFlow) GetSrcport() uint32 {
	if m != nil {
		return m.Srcport
	}
	return 0
}

func (m *NetworkFlow) GetDstport() uint32 {
	if m != nil {
		return m.Dstport
	}
	return 0
}

func init() {
	proto.RegisterType((*NetworkFlow)(nil), "onemon.NetworkFlow")
}

func init() { proto.RegisterFile("network.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
}
