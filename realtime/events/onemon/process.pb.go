// Code generated by protoc-gen-go. DO NOT EDIT.
// source: process.proto

package onemon

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProcessStatus int32

const (
	ProcessStatus_Create    ProcessStatus = 0
	ProcessStatus_Terminate ProcessStatus = 1
	ProcessStatus_Existing  ProcessStatus = 2
	ProcessStatus_Ignore    ProcessStatus = 3
)

var ProcessStatus_name = map[int32]string{
	0: "Create",
	1: "Terminate",
	2: "Existing",
	3: "Ignore",
}
var ProcessStatus_value = map[string]int32{
	"Create":    0,
	"Terminate": 1,
	"Existing":  2,
	"Ignore":    3,
}

func (x ProcessStatus) String() string {
	return proto.EnumName(ProcessStatus_name, int32(x))
}
func (ProcessStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

// ID: 1
type Process struct {
	Ts      uint32        `protobuf:"varint,7,opt,name=ts" json:"ts,omitempty"`
	Status  ProcessStatus `protobuf:"varint,1,opt,name=status,enum=onemon.ProcessStatus" json:"status,omitempty"`
	Pid     uint64        `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
	Ppid    uint64        `protobuf:"varint,3,opt,name=ppid" json:"ppid,omitempty"`
	Image   string        `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
	Command string        `protobuf:"bytes,5,opt,name=command" json:"command,omitempty"`
	Orig    bool          `protobuf:"varint,6,opt,name=orig" json:"orig,omitempty"`
}

func (m *Process) Reset()                    { *m = Process{} }
func (m *Process) String() string            { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()               {}
func (*Process) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Process) GetTs() uint32 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Process) GetStatus() ProcessStatus {
	if m != nil {
		return m.Status
	}
	return ProcessStatus_Create
}

func (m *Process) GetPid() uint64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Process) GetPpid() uint64 {
	if m != nil {
		return m.Ppid
	}
	return 0
}

func (m *Process) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Process) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Process) GetOrig() bool {
	if m != nil {
		return m.Orig
	}
	return false
}

func init() {
	proto.RegisterType((*Process)(nil), "onemon.Process")
	proto.RegisterEnum("onemon.ProcessStatus", ProcessStatus_name, ProcessStatus_value)
}

func init() { proto.RegisterFile("process.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
}
